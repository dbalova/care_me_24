import 'package:careme24/core/app_export.dart';import 'package:flutter/material.dart';import 'package:careme24/presentation/confirmation_order_dialog/confirmation_order_dialog.dart';class AppNavigationScreen extends StatelessWidget {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, body: Container(width: double.maxFinite, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("App Navigation", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20), child: Text("Check your app's UI from the below demo screens of your app.", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular16))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.black900))])), Expanded(child: SingleChildScrollView(child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [GestureDetector(onTap: () {onTapHome(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("home", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapHomeThree(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("home Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapHomeFour(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("home Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapHomeTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("home Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapHomeOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("home One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapWaitingwindowFive(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("waiting-window Five", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapWaitingwindowThree(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("waiting-window Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapTrackingOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("tracking One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapTrackingTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("tracking Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtoncallpoliceTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-call-police Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtoncallpolicecallactivitem(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-call-policecall-activ-item", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtoncallpoliceThree(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-call-police Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtoncallpoliceOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-call-police One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPlotspolice(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("plots-police", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtonhoneycallactivitemTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-honey_call-activ-item Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtonhoneycallactivitemOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-honey_call-activ-item One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPlotsMESOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("plots-MES One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPlotsMES(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("plots-MES", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTaptf(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("главный экран для вызова врача", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapWaitingwindow(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("waiting-window", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapWaitingwindowTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("waiting-window Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCommunicationteam(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("communication-team", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapTracking(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("tracking", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtonhoneycall(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-honey_call", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtonhoneycallTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-honey_call Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtonhoneycallOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-honey_call One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtonhoneycallactivitemThree(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-honey_call-activ-item Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapHospitals(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("hospitals", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapWaitingwindowFour(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("waiting-window Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapWaitingwindowOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("waiting-window One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtonhoneycallactivitem(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-honey_call-activ-item", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapButtoncallpolice(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("button-call-police", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapNewsbuttonContainer(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("news-button - Container", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapNewsread(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("news_read ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodsnew(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_new", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodspromotion(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_promotion", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTaptf1(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("главный экран ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("главный экран  One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapThree(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("главный экран  Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapFour(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("главный экран  Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("главный экран  Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapAlert(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("alert", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapAlertcall(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("alert_call ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCall(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("call", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCallactiv(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("call_activ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCallactivbutton(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("call_activ-button", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCallactivvideo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("call_activ-video", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCallsoundoffTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("call_sound-off Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCallsoundoffOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("call_sound-off One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCallsoundoff(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("call_sound-off", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapAlertadminsettings(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("alert_admin-settings ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapAlertadminsettingsOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("alert_admin-settings  One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGeneralinformation(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("фдуке_general-information", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapShop(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("shop", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodsmore(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_more", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodsmoreOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_more-One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodsbasket(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_basket", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodsfavorites(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_favorites", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodsordersexpected(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_orders-expected", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodsorderscompleted(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_orders-completed", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapGoodsorderscanceled(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("goods_orders-canceled", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapAboutorder(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("about-order", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapHeckout(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("сheckout", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPaymentdefoult(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("payment_defoult", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPaymentcompleted(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("payment_completed", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPaymenterror(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("payment_error", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPaymentfailed(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("payment_failed", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPaymentsuccessful(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("payment_successful ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCartdefoult(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("cart_defoult", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapCartadded(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("cart_added ", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapConfirmationorder(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("confirmation-order", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapConfirmationorderfinish(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("confirmation-order_finish", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapQualitycontroldefoult(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("quality-control-defoult", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapQualitycontrol(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("quality-control", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPaymentsuccessfulOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("payment_successful  One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonairpollutionmap(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_air-pollution_map", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonairpollution(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_air-pollution", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonairpollutionOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_air-pollution One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonheatThree(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_heat Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonheat(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_heat", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonheatOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_heat One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonheatTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_heat Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenoncoldTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_cold Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonheatFour(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_heat Four", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenoncold(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_cold", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenoncoldOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_cold One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonpressure(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_pressure", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonpressureTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_pressure Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonpressureOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_pressure One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonvirus(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_virus", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonvirusOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_virus One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonwind(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_wind", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonwindOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_wind One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonwindTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_wind Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonairraidalertOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_air-raid-alert One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonairraidalert(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_air-raid-alert", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonairraidalermap(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_air-raid-aler_map", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenoniceOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_ice One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenoniceTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_ice Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonice(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_ice", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonhail(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_hail", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonhailOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_hail One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonhailTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_hail Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonearthquake(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_earthquake", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonearthquakeOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_earthquake One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenoneruption(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_eruption", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenoneruptionOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_eruption One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonrockfallOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_rockfall One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonrockfall(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_rockfall", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonflood(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_flood", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonfloodOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_flood One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonfire(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_fire", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonfireTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_fire Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonfireOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_fire One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonradiation(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_radiation", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonradiationOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_radiation One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonnuclearpollutionOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_nuclear-pollution One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonnuclearpollutionThree(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_nuclear-pollution Three", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonnuclearpollutionTwo(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_nuclear-pollution Two", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonnuclearpollution(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_nuclear-pollution", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonavalancheOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_avalanche One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonavalanche(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_avalanche", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonterrorOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_terror One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonterror(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_terror", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenontornadoOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_tornado One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenontornado(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_tornado", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonfog(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_fog", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenonfogOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_fog One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenontsunamiOne(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_tsunami One", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))]))), GestureDetector(onTap: () {onTapPrehistoricphenomenontsunami(context);}, child: Container(decoration: AppDecoration.fillWhiteA700, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 20, top: 10, right: 20, bottom: 10), child: Text("prehistoric-phenomenon_tsunami", overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: AppStyle.txtRobotoRegular20))), Padding(padding: getPadding(top: 5), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: ColorConstant.blueGray40001))])))]))))])))); } 
onTapHome(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homeScreen); } 
onTapHomeThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homeThreeScreen); } 
onTapHomeFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homeFourScreen); } 
onTapHomeTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homeTwoScreen); } 
onTapHomeOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.homeOneScreen); } 
onTapWaitingwindowFive(BuildContext context) { Navigator.pushNamed(context, AppRoutes.waitingWindowFiveScreen); } 
onTapWaitingwindowThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.waitingWindowThreeScreen); } 
onTapTrackingOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.trackingOneScreen); } 
onTapTrackingTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.trackingTwoScreen); } 
onTapButtoncallpoliceTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonCallPoliceTwoScreen); } 
onTapButtoncallpolicecallactivitem(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonCallPolicecallActivItemScreen); } 
onTapButtoncallpoliceThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonCallPoliceThreeScreen); } 
onTapButtoncallpoliceOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonCallPoliceOneScreen); } 
onTapPlotspolice(BuildContext context) { Navigator.pushNamed(context, AppRoutes.plotsPoliceScreen); } 
onTapButtonhoneycallactivitemTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonHoneyCallActivItemTwoScreen); } 
onTapButtonhoneycallactivitemOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonHoneyCallActivItemOneScreen); } 
onTapPlotsMESOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.plotsMesOneScreen); } 
onTapPlotsMES(BuildContext context) { Navigator.pushNamed(context, AppRoutes.plotsMesScreen); } 
onTaptf(BuildContext context) { Navigator.pushNamed(context, AppRoutes.k18Screen); } 
onTapWaitingwindow(BuildContext context) { Navigator.pushNamed(context, AppRoutes.waitingWindowScreen); } 
onTapWaitingwindowTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.waitingWindowTwoScreen); } 
onTapCommunicationteam(BuildContext context) { Navigator.pushNamed(context, AppRoutes.communicationTeamScreen); } 
onTapTracking(BuildContext context) { Navigator.pushNamed(context, AppRoutes.trackingScreen); } 
onTapButtonhoneycall(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonHoneyCallScreen); } 
onTapButtonhoneycallTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonHoneyCallTwoScreen); } 
onTapButtonhoneycallOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonHoneyCallOneScreen); } 
onTapButtonhoneycallactivitemThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonHoneyCallActivItemThreeScreen); } 
onTapHospitals(BuildContext context) { Navigator.pushNamed(context, AppRoutes.hospitalsScreen); } 
onTapWaitingwindowFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.waitingWindowFourScreen); } 
onTapWaitingwindowOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.waitingWindowOneScreen); } 
onTapButtonhoneycallactivitem(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonHoneyCallActivItemScreen); } 
onTapButtoncallpolice(BuildContext context) { Navigator.pushNamed(context, AppRoutes.buttonCallPoliceScreen); } 
onTapNewsbuttonContainer(BuildContext context) { Navigator.pushNamed(context, AppRoutes.newsButtonContainerScreen); } 
onTapNewsread(BuildContext context) { Navigator.pushNamed(context, AppRoutes.newsReadScreen); } 
onTapGoodsnew(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsNewScreen); } 
onTapGoodspromotion(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsPromotionScreen); } 
onTaptf1(BuildContext context) { Navigator.pushNamed(context, AppRoutes.k37Screen); } 
onTapOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.oneScreen); } 
onTapThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.threeScreen); } 
onTapFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.fourScreen); } 
onTapTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.twoScreen); } 
onTapAlert(BuildContext context) { Navigator.pushNamed(context, AppRoutes.alertScreen); } 
onTapAlertcall(BuildContext context) { Navigator.pushNamed(context, AppRoutes.alertCallScreen); } 
onTapCall(BuildContext context) { Navigator.pushNamed(context, AppRoutes.callScreen); } 
onTapCallactiv(BuildContext context) { Navigator.pushNamed(context, AppRoutes.callActivScreen); } 
onTapCallactivbutton(BuildContext context) { Navigator.pushNamed(context, AppRoutes.callActivButtonScreen); } 
onTapCallactivvideo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.callActivVideoScreen); } 
onTapCallsoundoffTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.callSoundOffTwoScreen); } 
onTapCallsoundoffOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.callSoundOffOneScreen); } 
onTapCallsoundoff(BuildContext context) { Navigator.pushNamed(context, AppRoutes.callSoundOffScreen); } 
onTapAlertadminsettings(BuildContext context) { Navigator.pushNamed(context, AppRoutes.alertAdminSettingsScreen); } 
onTapAlertadminsettingsOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.alertAdminSettingsOneScreen); } 
onTapGeneralinformation(BuildContext context) { Navigator.pushNamed(context, AppRoutes.generalInformationScreen); } 
onTapShop(BuildContext context) { Navigator.pushNamed(context, AppRoutes.shopScreen); } 
onTapGoodsmore(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsMoreScreen); } 
onTapGoodsmoreOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsMoreOneScreen); } 
onTapGoodsbasket(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsBasketScreen); } 
onTapGoodsfavorites(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsFavoritesScreen); } 
onTapGoodsordersexpected(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsOrdersExpectedScreen); } 
onTapGoodsorderscompleted(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsOrdersCompletedScreen); } 
onTapGoodsorderscanceled(BuildContext context) { Navigator.pushNamed(context, AppRoutes.goodsOrdersCanceledScreen); } 
onTapAboutorder(BuildContext context) { Navigator.pushNamed(context, AppRoutes.aboutOrderScreen); } 
onTapHeckout(BuildContext context) { Navigator.pushNamed(context, AppRoutes.heckoutScreen); } 
onTapPaymentdefoult(BuildContext context) { Navigator.pushNamed(context, AppRoutes.paymentDefoultScreen); } 
onTapPaymentcompleted(BuildContext context) { Navigator.pushNamed(context, AppRoutes.paymentCompletedScreen); } 
onTapPaymenterror(BuildContext context) { Navigator.pushNamed(context, AppRoutes.paymentErrorScreen); } 
onTapPaymentfailed(BuildContext context) { Navigator.pushNamed(context, AppRoutes.paymentFailedScreen); } 
onTapPaymentsuccessful(BuildContext context) { Navigator.pushNamed(context, AppRoutes.paymentSuccessfulScreen); } 
onTapCartdefoult(BuildContext context) { Navigator.pushNamed(context, AppRoutes.cartDefoultScreen); } 
onTapCartadded(BuildContext context) { Navigator.pushNamed(context, AppRoutes.cartAddedScreen); } 
onTapConfirmationorder(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: ConfirmationOrderDialog(),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: EdgeInsets.only(left: 0),)); } 
onTapConfirmationorderfinish(BuildContext context) { Navigator.pushNamed(context, AppRoutes.confirmationOrderFinishScreen); } 
onTapQualitycontroldefoult(BuildContext context) { Navigator.pushNamed(context, AppRoutes.qualityControlDefoultScreen); } 
onTapQualitycontrol(BuildContext context) { Navigator.pushNamed(context, AppRoutes.qualityControlScreen); } 
onTapPaymentsuccessfulOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.paymentSuccessfulOneScreen); } 
onTapPrehistoricphenomenonairpollutionmap(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonAirPollutionMapScreen); } 
onTapPrehistoricphenomenonairpollution(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonAirPollutionScreen); } 
onTapPrehistoricphenomenonairpollutionOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonAirPollutionOneScreen); } 
onTapPrehistoricphenomenonheatThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonHeatThreeScreen); } 
onTapPrehistoricphenomenonheat(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonHeatScreen); } 
onTapPrehistoricphenomenonheatOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonHeatOneScreen); } 
onTapPrehistoricphenomenonheatTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonHeatTwoScreen); } 
onTapPrehistoricphenomenoncoldTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonColdTwoScreen); } 
onTapPrehistoricphenomenonheatFour(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonHeatFourScreen); } 
onTapPrehistoricphenomenoncold(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonColdScreen); } 
onTapPrehistoricphenomenoncoldOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonColdOneScreen); } 
onTapPrehistoricphenomenonpressure(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonPressureScreen); } 
onTapPrehistoricphenomenonpressureTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonPressureTwoScreen); } 
onTapPrehistoricphenomenonpressureOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonPressureOneScreen); } 
onTapPrehistoricphenomenonvirus(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonVirusScreen); } 
onTapPrehistoricphenomenonvirusOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonVirusOneScreen); } 
onTapPrehistoricphenomenonwind(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonWindScreen); } 
onTapPrehistoricphenomenonwindOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonWindOneScreen); } 
onTapPrehistoricphenomenonwindTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonWindTwoScreen); } 
onTapPrehistoricphenomenonairraidalertOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonAirRaidAlertOneScreen); } 
onTapPrehistoricphenomenonairraidalert(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonAirRaidAlertScreen); } 
onTapPrehistoricphenomenonairraidalermap(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonAirRaidAlerMapScreen); } 
onTapPrehistoricphenomenoniceOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonIceOneScreen); } 
onTapPrehistoricphenomenoniceTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonIceTwoScreen); } 
onTapPrehistoricphenomenonice(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonIceScreen); } 
onTapPrehistoricphenomenonhail(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonHailScreen); } 
onTapPrehistoricphenomenonhailOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonHailOneScreen); } 
onTapPrehistoricphenomenonhailTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonHailTwoScreen); } 
onTapPrehistoricphenomenonearthquake(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonEarthquakeScreen); } 
onTapPrehistoricphenomenonearthquakeOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonEarthquakeOneScreen); } 
onTapPrehistoricphenomenoneruption(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonEruptionScreen); } 
onTapPrehistoricphenomenoneruptionOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonEruptionOneScreen); } 
onTapPrehistoricphenomenonrockfallOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonRockfallOneScreen); } 
onTapPrehistoricphenomenonrockfall(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonRockfallScreen); } 
onTapPrehistoricphenomenonflood(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonFloodScreen); } 
onTapPrehistoricphenomenonfloodOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonFloodOneScreen); } 
onTapPrehistoricphenomenonfire(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonFireScreen); } 
onTapPrehistoricphenomenonfireTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonFireTwoScreen); } 
onTapPrehistoricphenomenonfireOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonFireOneScreen); } 
onTapPrehistoricphenomenonradiation(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonRadiationScreen); } 
onTapPrehistoricphenomenonradiationOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonRadiationOneScreen); } 
onTapPrehistoricphenomenonnuclearpollutionOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonNuclearPollutionOneScreen); } 
onTapPrehistoricphenomenonnuclearpollutionThree(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonNuclearPollutionThreeScreen); } 
onTapPrehistoricphenomenonnuclearpollutionTwo(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonNuclearPollutionTwoScreen); } 
onTapPrehistoricphenomenonnuclearpollution(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonNuclearPollutionScreen); } 
onTapPrehistoricphenomenonavalancheOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonAvalancheOneScreen); } 
onTapPrehistoricphenomenonavalanche(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonAvalancheScreen); } 
onTapPrehistoricphenomenonterrorOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonTerrorOneScreen); } 
onTapPrehistoricphenomenonterror(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonTerrorScreen); } 
onTapPrehistoricphenomenontornadoOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonTornadoOneScreen); } 
onTapPrehistoricphenomenontornado(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonTornadoScreen); } 
onTapPrehistoricphenomenonfog(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonFogScreen); } 
onTapPrehistoricphenomenonfogOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonFogOneScreen); } 
onTapPrehistoricphenomenontsunamiOne(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonTsunamiOneScreen); } 
onTapPrehistoricphenomenontsunami(BuildContext context) { Navigator.pushNamed(context, AppRoutes.prehistoricPhenomenonTsunamiScreen); } 
 }
